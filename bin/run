#!/usr/bin/env node

'use strict';

process.title = 'devby';

const server = require('../src/server');
const options = require('./options').config;
const help = require('./options').help;
const fs = require('fs');
const path = require('path');
const { log } = require('../src/log');

const jsonfile = JSON.parse(fs.readFileSync(path.join(__dirname, '../package.json')));

// 组装好缩写和全写的映射
let shortHands = {};
for (let key in options) {
    if (options[key].short) shortHands["-" + options[key].short] = "--" + key;
}

// 命令行传递的参数
const parsed = require("../src/options")(shortHands, process.argv);

(() => {
    // 打印版本
    if (Array.isArray(parsed.version)) {
        log("\ndevby@v" + jsonfile.version + "\n");
    }

    // 判断是否需要帮助
    else if (Array.isArray(parsed.help)) {

        // 打印具体的配置提示
        if (parsed.help.length > 0) {
            let help0 = parsed.help[0];

            // 缩写转全拼
            if (help0.length == 1) {
                help0 = shortHands["-" + help0];
            }

            if (help0) {
                help0 = help0.replace(/^--/, "");

                // 根据需要帮助的命令获取对应的信息
                const help0Option = options[help0];
                if (help0Option) {
                    log(`
  ` + help0Option.demo + `         ` + help0Option.info + `
                      `);

                    return;
                }

            }
        }

        log(help);
    }

    // 基于配置文件运行
    else if (Array.isArray(parsed.config)) {
        if (parsed.config.length < 1) parsed.config[0] = './devby.config.js';

        // 读取配置
        let configFile = require(path.join(process.cwd(), parsed.config[0]));

        // 如果配置了服务器
        if ("devServer" in configFile) {
            server(configFile.devServer.port);
        }
    }

    // 否则就是启动服务器
    else {

        let port = (parsed.server && parsed.server[0]) || parsed.__terminal__[0];
        server(port);
    }
})();